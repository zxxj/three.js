{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","main/main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","_cache","warnOnce","message","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super33","_this25","isMeshDepthMaterial","_Material4","_super34","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super35","_this27","isArrayCamera","Group","_Object3D4","_super36","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super37","_this29","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super49","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super50","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super51","_this42","LineLoop","_Line2","_super52","_this43","_Material7","_super53","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super54","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super55","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super56","_this47","CompressedTexture","_Texture8","_super57","_this48","CompressedArrayTexture","_CompressedTexture","_super58","_this49","CompressedCubeTexture","_CompressedTexture2","_super59","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_super60","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super61","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this52","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super62","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super63","curveType","_this54","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super64","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super65","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_super66","_this57","isLineCurve","LineCurve3","_Curve6","_super67","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_super68","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super69","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super70","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super71","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super72","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super73","phiStart","phiLength","_this64","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super74","capSegments","radialSegments","_this65","CircleGeometry","_BufferGeometry4","_super75","thetaStart","thetaLength","_this66","segment","CylinderGeometry","_BufferGeometry5","_super76","radiusTop","radiusBottom","openEnded","_this67","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super77","_this68","PolyhedronGeometry","_BufferGeometry6","_super78","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super79","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super80","thresholdAngle","_this71","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super81","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super82","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super83","_this74","OctahedronGeometry","_PolyhedronGeometry3","_super84","_this75","RingGeometry","_BufferGeometry9","_super85","innerRadius","outerRadius","thetaSegments","phiSegments","_this76","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super86","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super87","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super88","_this79","TorusGeometry","_BufferGeometry12","_super89","tube","tubularSegments","_this80","TorusKnotGeometry","_BufferGeometry13","_super90","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super91","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super92","_this83","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super93","_this84","RawShaderMaterial","_ShaderMaterial","_super94","_this85","_Material9","_super95","_this86","_MeshStandardMaterial","_super96","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_toConsumableArray","_Material10","_super97","_this88","_Material11","_super98","_this89","_Material12","_super99","_this90","_Material13","_super100","_this91","_Material14","_super101","_this92","_LineBasicMaterial","_super102","_this93","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super103","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super104","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super105","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super106","ColorKeyframeTrack","_KeyframeTrack2","_super107","NumberKeyframeTrack","_KeyframeTrack3","_super108","QuaternionLinearInterpolant","_Interpolant4","_super109","QuaternionKeyframeTrack","_KeyframeTrack4","_super110","StringKeyframeTrack","_KeyframeTrack5","_super111","VectorKeyframeTrack","_KeyframeTrack6","_super112","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super113","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_super114","_this96","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super115","CompressedTextureLoader","_Loader3","_super116","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super117","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super118","urls","DataTextureLoader","_Loader6","_super119","texData","TextureLoader","_Loader7","_super120","Light","_Object3D11","_super121","_this97","HemisphereLight","_Light","_super122","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super123","_this99","isSpotLightShadow","SpotLight","_Light2","_super124","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super125","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_super126","_this102","DirectionalLightShadow","_LightShadow3","_super127","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_super128","_this104","AmbientLight","_Light5","_super129","_this105","RectAreaLight","_Light6","_super130","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super131","_this107","MaterialLoader","_Loader8","_super132","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super133","_this109","BufferGeometryLoader","_Loader9","_super134","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super135","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super136","_this110","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super137","bufferCopy","decodeAudioData","audioBuffer","handleError","HemisphereLightProbe","_LightProbe","_super138","_this111","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super139","_this112","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super140","_this113","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super141","_this114","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super142","_this115","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super143","_this116","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super144","_this117","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super145","_this118","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super146","_this119","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super147","_this120","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super148","sphereSize","_this121","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super149","_this122","GridHelper","_LineSegments2","_super150","_this123","PolarGridHelper","_LineSegments3","_super151","sectors","rings","_this124","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super152","_this125","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super153","_this126","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super154","_this127","Box3Helper","_LineSegments6","_super155","_this128","PlaneHelper","_Line3","_super156","_this129","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super157","headLength","headWidth","_this130","setDirection","setColor","AxesHelper","_LineSegments7","_super158","_this131","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","performCursorZoom","clampDistance","zoomChanged","newRadius","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateMouseParameters","rect","getBoundingClientRect","clientX","clientY","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","innerWidth","innerHeight","cubeGeometry","cubeMaterial","append","controls","axesHelper","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"main.0632549a.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '155';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = this.alphaHash;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, vMapUv );\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst xr = renderer.xr;\n\t\tconst environmentBlendMode = xr.getEnvironmentBlendMode();\n\n\t\tswitch ( environmentBlendMode ) {\n\n\t\t\tcase 'opaque':\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'additive':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'alpha-blend':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase SRGBColorSpace:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( colorSpace === SRGBColorSpace && forceLinearTransfer === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! texData ) return onError(); // TODO: Remove this when all loaders properly throw errors\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( object ).sub( object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","// 导入threejs\nimport * as THREE from 'three';\n\n// 导入轨道控制器\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconsole.log(THREE);\n\n// 目标: 使用控制器,查看3d物体\n\n// 1.创建场景\nconst scene = new THREE.Scene();\n\n// 2.创建相机\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\n\n// 设置相机的位置\ncamera.position.set(0, 0, 10);\n\n// 添加到场景中\nscene.add(camera);\n\n// 向场景中添加物体\n// 创建几何体\nconst cubeGeometry = new THREE.BoxGeometry(1, 1, 1); // 宽 高 深度\n// 设置材质\nconst cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xcc3300 });\n\n// 根据几何体和材质创建物体\nconst cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n\n// 将几何体添加到场景当中\nscene.add(cube);\n\n// 初始化渲染器\nconst renderer = new THREE.WebGLRenderer();\n\n// 设置渲染的尺寸大小\nrenderer.setSize(window.innerWidth, window.innerHeight);\n\n// 将webGL渲染的canvas内容追加到body\ndocument.body.append(renderer.domElement);\n\n// // 使用渲染器,通过相机将场景渲染进来\n// renderer.render(scene, camera);\n\n// 创建轨道控制器\nconst controls = new OrbitControls(camera, renderer.domElement);\n\n// 添加坐标轴辅助器\nconst axesHelper = new THREE.AxesHelper(5);\n\n// 将坐标轴辅助器添加到场景中\nscene.add(axesHelper);\n\nfunction render() {\n  renderer.render(scene, camera);\n\n  // 浏览器渲染下一帧的时候就会调用一次render函数\n  requestAnimationFrame(render);\n}\n\nrender();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}